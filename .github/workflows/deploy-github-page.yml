name: deploy-github-page 

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: setup-pages 
        uses: actions/configure-pages@v5
      - name: cache-docker-image
        id: cache-docker-image
        uses: actions/cache@v3
        with:
          path: texlive-image
          key: texlive-image-cache-key
      - name: pull-docker-image
        if: steps.cache-docker-image.outputs.cache-hit != 'true'
        run: | 
          docker pull texlive/texlive && \
          mkdir -p texlive-image && \
          docker image save texlive/texlive \
            --output texlive-image/texlive.tar
      - name: load-cached-docker-image
        if: steps.cache-docker-image.outputs.cache-hit == 'true'
        run: docker image load --input texlive-image/texlive.tar
      - name: run-texlive
        run: |
          docker run -i --rm \
            --name texlive-container \
            -v "${PWD}:/workdir" \
            -w "/workdir" \
            texlive/texlive \
            latexmk -pdf \
              -outdir=docs \
              -auxdir=/tmp/latexmk
      - name: upload-artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'docs'
      - name: deploy-github-pages 
        id: deployment
        uses: actions/deploy-pages@v4